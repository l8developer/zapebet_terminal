
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {

    lint {
        baseline = file("lint-baseline.xml")
    }
//    signingConfigs {
//        debug {
//            storeFile file('/Users/lucasribeiro/Documents/Keys/pixcred_maquininha/Release.jks')
//            storePassword '573773'
//            keyAlias 'key0'
//            keyPassword '573773'
//        }
//    }
    namespace 'com.bet.mpos'
    compileSdk 33

    defaultConfig {
        applicationId "com.bet.mpos"
        minSdk 23
        targetSdk 33
        versionCode 3
        versionName "1.0.3"
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters  'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
//            versionNameSuffix '-DEBUG'
            resValue "string", "app_name", "Bet debug"
            buildConfigField("String", 'API_URL', dev_url)
            buildConfigField("String", 'API_BET_URL', dev_bet_url)
            buildConfigField("String", 'FILE_NAME_AD', file_name_activation_data)
            buildConfigField("String", 'MASTER_KEY_ALIAS_AD', master_key_alias_activation_data)
            buildConfigField("String", 'FILE_GENERAL', file_general)
            buildConfigField("String", 'MASTER_KEY_ALIAS_GENERAL', master_key_alias_general)
            buildConfigField("String", 'ENVIRONMENT', environment)
            buildConfigField("String", 'TERMINAL_SERIAL_NUMBER', serial_number_debug)
            buildConfigField("String", 'KEY_OUT', key_out)
            buildConfigField("String", 'KEY_IN', key_in)
            buildConfigField("String", 'ZB_TOKEN', zb_token)
        }
        release {
            minifyEnabled false
            resValue "string", "app_name", "Bet"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", 'API_URL', prod_url)
            buildConfigField("String", 'API_BET_URL', prod_bet_url)
            buildConfigField("String", 'FILE_NAME_AD', file_name_activation_data)
            buildConfigField("String", 'MASTER_KEY_ALIAS_AD', master_key_alias_activation_data)
            buildConfigField("String", 'FILE_GENERAL', file_general)
            buildConfigField("String", 'MASTER_KEY_ALIAS_GENERAL', master_key_alias_general)
            buildConfigField("String", 'ENVIRONMENT', environment)
            buildConfigField("String", 'TERMINAL_SERIAL_NUMBER', serial_number_release)
            buildConfigField("String", 'KEY_OUT', key_out)
            buildConfigField("String", 'KEY_IN', key_in)
            buildConfigField("String", 'ZB_TOKEN', zb_token)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
        pickFirst 'META-INF/LICENSE.txt' // picks the JavaMail license file
        jniLibs { useLegacyPackaging true }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    //implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar', '*.so'])
    implementation fileTree(include: ['*.jar', '*.aar', '*.so'], dir: 'libs')
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'androidx.security:security-crypto:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'

    implementation 'com.google.auth:google-auth-library-oauth2-http:1.7.0'
    implementation "io.grpc:grpc-okhttp:1.32.2"
    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0")

    implementation("org.jetbrains.kotlin:kotlin-reflect:1.8.10")
    implementation("com.squareup.okhttp:okhttp:2.5.0")
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    implementation("com.google.code.gson:gson:2.9.0")

    // Dependencies for CameraX
    def camerax_version = "1.1.0-beta01"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.15.1'

    //SVG TO BITMAP
    implementation 'com.caverock:androidsvg:1.4'

}